# !! BEWARE !!
# Accidentally using a pin as an output with the output shorted will break your Pi,
# always use a series resistor on every input and output.
# Subjecting inputs to voltages outside the Pi's allowable range will break your Pi even with the series resistor.

# This file in /pipresents/pp_resources/pp_templates may be overwritten by updates and is not used by Pi Presents
# copy the file to the profile that is to use it.

# There is no checking of the content of this file by Pi Presents, try any changes by
#  running from a terminal window so that any exceptions are reported

# USE
# ===
# This file binds physical RPi GPIO input and output pins to the symbolic names of inputs and outputs used by Pi Presents
# It also configures the input pins.
# Pins refer to the Pi's P1 connector.

# The DRIVER section must be present from Version 1.3.3a onward
# A section for every pin must be present in the file with a direction of in, out or none. A pin with direction = none is ignored.

# INPUTS
# -------
#  Each input pin can generate an event having the specified symbolic name in any of four ways.
#  * rising edge  - An event with the symbolic name specified in 'rising-name' is generated when the input changes from 0 to 1 (0 volts to 3.3 volts)
#  * falling edge  - An event with the symbolic name specified in 'falling-name' is generated when the input changes from 1 to 0 (3.3 volts to 0 volts)
#  * one state - An event with the symbolic name specified in 'one-name'is generated continually after the 'repeat' number of tick-intervals while the input state is '1' (3.3 volts)
#  * zero state - An event with the symbolic name specified in 'zero-name'is generated continually after  the 'repeat' number of tick-interval while the input state is '0' (0 volts).
#  The repeat time is in intervals as specified in the DRIVER section.
# If you do not want the event to be generated leave the symbolic name blank

# threshold - the pin must be in greater than this number of contiguous samples for a change of state to be detected.
#   The pin is sampled every tick-interval.
# debouncing is used to eliminate mechanical contact bounce. It might also help with PIR false triggering.

# optional fields
# linked-output - the input pin is directly connected to the output pin.
# linked-invert - inverts the logic (in=1>out=0,in=0>out=1)


# Example of an unused pin
# [P1-07]
# direction = none 


# Example of an input pin that generate an event when a button is pressed

# [P1-07]            # pin number of P1 connector
# direction =  in    # always in for inputs
# rising-name =     # the symbolic name for a rising edge event 0>1
# falling-name =  pp-stop     # the symbolic name of the event bound to a falling edge 1>0
# one-name =         # symbolic name for a one state event
# zero-name =        # symbolic name for a zero state event
# repeat =           # state repeat interval (tick-interval intervals)
# threshold = 2      # the de-bounce threshold
# pull-up-down = up  # up/down/blank. blank = none.
# optional fields
# linked-output = myoutput  # logical name of an output pin
# linked-invert = yes  # yes/no linked pin is inverted 

# example of a pin used to create a repeating event for volume control etc.
# [P1-07]            # pin number of P1 connector
# direction =  in    # always in for inputs
# rising-name =    # the symbolic name for a rising edge event 0>1
# falling-name =  vol-up    # generate the event when the button is first pressed
# one-name =                # symbolic name for a one state event
# zero-name = vol-up       # generate the event after the repeat interval
# repeat = 20        # repeat the event after 20*50 mS while the button is pressed
# threshold = 2      # the de-bounce threshold
# pull-up-down = up  # up/down/blank. blank = none.


# example of a pin used to create an event after a period of time of pressing the button
# [P1-07]            # pin number of P1 connector
# direction =  in    # always in for inputs
# rising-name =     # the symbolic name for a rising edge event 0>1
# falling-name =     # do not generate the event when the button is first pressed
# one-name =         # symbolic name for a one state event
# zero-name =  pp-shutdownnow      # symbolic name to shutdown the RPi
# repeat = 100        # generate the event after 5 seconds while the button is pressed
# threshold = 2      # the de-bounce threshold
# pull-up-down = up  # up/down/blank. blank = none.

# OUTPUTS
# -------
#  - the logical 'on' state equates to GPIO.output(pin, True) and produces +3.3 volts
# - the logical 'off' state produces 0 volts
# - The RPi and Pi Presents initialises GPIO outputs to 0 volts so it is best to design relays etc. for positive logic.


# Example of an output section
# [P1-08]           # pin number of P1 connector
# direction =  out    # always out for outputs
# name =  myoutput   # a logical name use by Pi Presents and defined in animation fields


# THIS TEMPLATE
# =============

# The templates and examples of Pi Presents bind the following symbolic names to commands used by mediashow, liveshow and menu and to some special commands.
# So that gpio can be used with the examples these symbolic names are assigned to an arbitrary set of pins in this file. You will want to modify them for your application:

#   pp-shutdownnow   initiates shutdown
#   pp-down       down - move down a menu or next track in a mediashow
#   pp-up         up - move up a menu or previous track in a mediashow
#   pp-play       play - start playing a track in a menu etc.
#   pp-pause      pause - toggle pause in relevent tracks
#   pp-stop       stop - stop tracks and shows
#   pp-exit	  exit - stop tracks and shows (see manual for difference to pp-stop)

#   PIR - used as the trigger input for the exhibit example

# Other symbolic names for inputs can be defined in profiles and used for:
#  to initiate link commands in  hyperlinkshows
#  to initiate tracks in radiobuttonshows
#  for start-trigger end-trigger and next-trigger in mediashows


# The examples, manual, and assignments below assume the use of normally open push buttons connected to ground (0 volts) and a PIR with normally closed contacts connected to ground.


# DRIVER SECTION
# ==============
# title = GPIO    text which is reported on logs and error reports
# enabled = yes   yes/no a driver can be enabled/disabled using this so it can be llft in pp_io_config
# tick-interval = 50  polling interval for inputs in mS.
# module= pp_gpiodriver the python module that implements this driver. More than one I/O config file can use the same driver.


# THE REAL STUFF
# -------

[DRIVER]
title = GPIO    
enabled = yes
tick-interval = 50
module= pp_gpiodriver

# THE PINS

# Has a permanent 1K8 pull up resistor, so use for input and output with care 	
[P1-03]
direction = none

# Has a permanent 1K8 pull up resistor,so use for input and output with care  	
[P1-05]
direction = none

[P1-07]
direction = in
rising-name =
falling-name = pp-stop
one-name = 
zero-name = 
repeat = 
threshold = 2
pull-up-down = up

[P1-08]
direction = none

[P1-10]
direction = none

# PIR is used as a trigger event in some examples
[P1-11]
direction = in
rising-name = PIR
falling-name =
one-name =
zero-name = 
repeat = 
threshold = 2
pull-up-down = up


# shutdown the Rpi after 5 seconds
# changed for version 1.3.3a
[P1-12]
direction = in
rising-name =
falling-name = 
one-name = 
zero-name = pp-shutdownnow
repeat = 100
threshold = 8
pull-up-down = up

[P1-13]
direction = none

[P1-15]
direction = in
rising-name =
falling-name = pp-down
one-name = 
zero-name = 
repeat = 
threshold = 2
pull-up-down = up

[P1-16]
direction = in
rising-name =
falling-name = pp-up
one-name = 
zero-name = 
repeat = 
threshold = 2
pull-up-down = up

[P1-18]
direction = in
rising-name =
falling-name = pp-play
one-name = 
zero-name = 
repeat = 
threshold = 2
pull-up-down = up

[P1-19]
direction = none

[P1-21]
direction = none 

[P1-22]
direction = in
rising-name =
falling-name = pp-pause
one-name =
zero-name = 
repeat = 
threshold = 2
pull-up-down = up

[P1-23]
direction = none

[P1-24]
direction = none

[P1-26]
direction = none

# A+/B+/2B PINS
# ---------

[P1-29]
direction = none
[P1-31]
direction = none
[P1-32]
direction = none
[P1-33]
direction = none
[P1-35]
direction = none
[P1-36]
direction = none
[P1-37]
direction = none
[P1-38]
direction = none
[P1-40]
direction = none
